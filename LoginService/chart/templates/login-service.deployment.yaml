apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "microservice-service-deployment.fullname" . }}-deployment
  labels:
    app: {{ template "microservice-service-deployment.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "microservice-service-deployment.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "microservice-service-deployment.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.app.image.repository }}/{{ .Values.app.image.imageName }}:{{ .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        env:
        {{- range $index, $item := .Values.configs }}  #looping through values in ConfigMap
          - name: {{ $item.name }}
            valueFrom:
              configMapKeyRef:
                name: configs
                key: {{ $item.key }}
        {{- end }}
        ports:
          - name: http
            containerPort: 4201
            protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.app.cpu }}
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
            
      initContainers:
      - name: keyvault-agent
        image: {{ .Values.hexadite.image.repository }}/{{ .Values.hexadite.image.imageName }}:{{ .Values.hexadite.image.tag }}
        env:
        - name: VAULT_BASE_URL
          value: {{ .Values.hexadite.keyVault }}
        - name: SERVICE_PRINCIPLE_FILE_PATH
          value: /host/azure.json
        - name: SECRETS_FOLDER
          value: /secrets
        - name: SECRETS_KEYS
          value: mt-aad-password
        volumeMounts:
        - name: secrets
          mountPath: /secrets
        - name: host-sp
          mountPath: /host/azure.json
          readOnly: true
          
      imagePullSecrets:
        - name: {{ .Values.app.imagePullSecrets }}

      volumes:
      - name: secrets
        emptyDir:
          # we want the secrets to reside only in-memory
          medium: Memory
      - name: host-sp
        hostPath:
          # this file contains the cluster service-principal, it exists on every node by default
          path: /etc/kubernetes/azure.json
          #type: File # commented out because current cubctl doesn't understand it.
